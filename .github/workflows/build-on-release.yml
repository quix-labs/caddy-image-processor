name: Build and Test

on:
  release:
    types: [ created ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20'

      - name: Install xcaddy
        run: go get -u github.com/caddyserver/xcaddy/cmd/xcaddy

      - name: Run tests
        run: go test -v ./...

  build:
    needs: test
    name: Build for different environments
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [ linux, windows ]
        goarch: [ amd64 ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20'

      - name: Install xcaddy
        run: go get -u github.com/caddyserver/xcaddy/cmd/xcaddy

      - name: Build for ${{ matrix.goos }}/${{ matrix.goarch }}
        run: |
          xcaddy build --output caddy-${{ matrix.goos }}-${{ matrix.goarch }} --with github.com/quix-labs/caddy-image-processor@latest

      - name: Upload Release Asset (${{ matrix.goos }}/${{ matrix.goarch }})
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./caddy-${{ matrix.goos }}-${{ matrix.goarch }}
          asset_name: caddy-${{ matrix.goos }}-${{ matrix.goarch }}
          asset_content_type: application/octet-stream